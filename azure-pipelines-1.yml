# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

stages:
- stage: build
  displayName: building stage
  pool: 
   vmImage: ubuntu-latest
  
  jobs:
  - deployment: deploymentJob
    displayName: Deploy to VM
    environment: demo-imp.som-imp-vm
   
    strategy:
      runOnce:
          deploy:   
            steps:
                - checkout: self
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'specific'
                    project: 'e04d6ea5-70c3-48d9-8aab-24717f6fb3f9'
                    pipeline: '1'
                    buildVersionToDownload: 'latest'
                    allowPartiallySucceededBuilds: true
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: NodeTool@0
                  inputs:
                    versionSource: 'spec'
                    versionSpec: '10.19.0'
                    checkLatest: true
                - script: |
                    # Variables
                    ORGANIZATION_URL="https://dev.azure.com/somya2000"  # Replace with your organization URL
                    PROJECT_NAME="artifactdemo"  # Replace with your project name
                    FEED_NAME="trail"  # Replace with your feed name
                    PACKAGE_NAME="node-hello"  # Replace with your package name

                    # Get the latest version from Azure Artifacts
                    latest_version=$(az artifacts universal package version list \
                      --organization "${ORGANIZATION_URL}" \
                      --project "${PROJECT_NAME}" \
                      --feed "${FEED_NAME}" \
                      --name "${PACKAGE_NAME}" \
                      --query "max([].version)" \
                      --output tsv)

                    # Print the latest version
                    echo "Latest version: $latest_version"

                    # Set the latest version as an environment variable
                    echo "##vso[task.setvariable variable=npmPackageVersion]$latest_version"

                    # Install the latest version of the npm package
                    npm install "${PACKAGE_NAME}@${latest_version}"
                    npm start
